#!/bin/bash
source /opt/rh/rh-mariadb105/enable
PATH=$PATH:/opt/rh/rh-mariadb105/root/usr/bin/

export PATH

function OCC
{
    params=$@;
    source /opt/rh/rh-php73/enable
    cd /usr/share/nextcloud/
    TERM=dumb runuser -s /bin/bash apache -c "php -dmemory_limit=512M ./occ $params"
}

password=`perl -e "use NethServer::Password; print NethServer::Password::store('nextcloud');"`

systemctl is-active --quiet rh-mariadb105-mariadb@nextcloud
if [[ $? -ne 0 ]]; then
    systemctl start rh-mariadb105-mariadb@nextcloud
    max_wait=20
    wait=0
    while ! mysql --socket /run/rh-mariadb105-mariadb/nextcloud-mysql.sock -e "SHOW DATABASES" 2>/dev/null; do
        sleep 1
        wait=$((wait+1))
        if [ $wait -ge $max_wait ]; then
            echo "[ERROR] Can't start rh-mariadb105-mariadb@nextcloud"
            exit 1
        fi
    done
fi

if [[ -d '/var/lib/mysql/nextcloud' ]]; then

    OCC "maintenance:mode --on"

    tmp_sql=`mktemp`
    /usr/bin/mysqldump --databases nextcloud > $tmp_sql
    if [[ $? -ne 0 ]]; then
        echo "[ERROR] Error while dumping nextcloud database from mariadb55"
        exit 1
    fi
    if [[ ! -f $tmp_sql ]]; then
        echo "[ERROR] There is no dumped nextcloud database"
        exit 1
    fi
    mysql --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock -e "CREATE DATABASE IF NOT EXISTS nextcloud;"
    mysql --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock --database nextcloud < $tmp_sql
    if [[ $? -ne 0 ]]; then
        echo "[ERROR] Error while restoring nextcloud database to SCL mariadb105"
        exit 1
    fi
    mysql_upgrade --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock --force
    if [[ $? -ne 0 ]]; then
        echo "[ERROR] Error while upgrading nextcloud database"
        exit 1
    fi
    if [[ -d '/var/opt/rh/rh-mariadb105/lib/mysql-nextcloud/' ]]; then
        OCC config:system:set dbhost --value="localhost:/run/rh-mariadb105-mariadb/nextcloud-mysql.sock" --type="string"
        /usr/bin/mysql -e "drop database nextcloud;"
        rm -f $tmp_sql

        # Alter database for migration
        mysql --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock -e "ALTER DATABASE nextcloud CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;"
        mysql --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock -e "grant all on nextcloud.* to 'nextcloud'@'localhost' identified by '$password';"
        mysql --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock -e "FLUSH PRIVILEGES"
        #Enabling MySQL 4-byte support
        OCC "config:system:set mysql.utf8mb4 --type boolean --value='true'"
        OCC "maintenance:repair"
    fi
else
    # initialize grants mysql nextcloud database
    mysql --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock -e "CREATE DATABASE IF NOT EXISTS nextcloud;"
    mysql --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock -e "ALTER DATABASE nextcloud CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;"
    mysql --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock -e "grant all on nextcloud.* to 'nextcloud'@'localhost' identified by '$password';"
    mysql --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock -e "FLUSH PRIVILEGES"
fi

# check if we are migrating from release 10 to 11
if [ -f /var/www/html/nextcloud/config/config.php ]; then
    mv /var/www/html/nextcloud/config/config.php /usr/share/nextcloud/config/config.php
    rm -rf /var/www/html/nextcloud/
fi

res=`mysql --socket=/run/rh-mariadb105-mariadb/nextcloud-mysql.sock -e "select count(*) from information_schema.tables where table_type = 'BASE TABLE' and table_schema = 'nextcloud'" | tail -n1`;
if [[ $res == '0' ]]; then
    OCC "maintenance:install --database mysql --database-name nextcloud --database-user nextcloud --database-pass $password --database-host=localhost:/run/rh-mariadb105-mariadb/nextcloud-mysql.sock --admin-user admin --admin-pass  Nethesis,1234 --data-dir /var/lib/nethserver/nextcloud/"

    OCC "app:enable user_ldap"
    OCC "ldap:create-empty-config" # create config with empty id
else
    # to satisfy code integrity check
    if [ -f /usr/share/nextcloud/.htaccess.rpmsave ]; then
        rm -f /usr/share/nextcloud/.htaccess.rpmsave
    fi
    if [ -f /usr/share/nextcloud/.htaccess.rpmnew ]; then
        rm -f /usr/share/nextcloud/.htaccess.rpmnew
    fi

    # Disable mail app when upgrading from NC 19: https://github.com/nextcloud/mail/issues/3727
    if OCC app:list | grep -q -- '- mail:'; then
        echo "[NOTICE] Disabling mail app"
        OCC app:disable mail
    fi

    OCC "maintenance:mode --on"

    OCC "upgrade"
    OCC "maintenance:mode --off"
    OCC "integrity:check-core"
    # Catch 'Nextcloud is already latest version' message
    if [ $? -eq 3 ]; then
        exit 0
    fi
    OCC "db:add-missing-indices"
fi
